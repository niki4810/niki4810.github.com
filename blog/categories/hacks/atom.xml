<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: hacks | Octoblog]]></title>
  <link href="http://niki4810.github.com/blog/categories/hacks/atom.xml" rel="self"/>
  <link href="http://niki4810.github.com/"/>
  <updated>2014-12-13T22:18:15-08:00</updated>
  <id>http://niki4810.github.com/</id>
  <author>
    <name><![CDATA[Nikhilesh Katakam]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Unary plus operator shorthand for converting a string to a number in javascript]]></title>
    <link href="http://niki4810.github.com/blog/2013/08/20/unary-plus-operator-shorthand-for-converting-string-to-number-in-javascript/"/>
    <updated>2013-08-20T21:43:00-07:00</updated>
    <id>http://niki4810.github.com/blog/2013/08/20/unary-plus-operator-shorthand-for-converting-string-to-number-in-javascript</id>
    <content type="html"><![CDATA[<p>If you are a javascript developer like me, you must have come across a scenario where you needed to convert a string to a number. I have generally been using either <code>parseInt</code> or <code>parseFloat</code> for these type of conversions. <!-- more --></p>

<p>For example, you would do something like this for the conversion</p>

<p><code>javascript
  var num = parseInt("10");
 // output : num = 10;
</code>
<code>javascript
   var num = parseFloat("10.23")
  // output: num = 10.23
</code></p>

<p>Most recently I have come across another interesting way to do the same conversion, i.e. using the <code>unary plus</code> operator ( <code>+</code> ). The above two statements can be rewritten as following to achieve the same result</p>

<p>```javascript</p>

<pre><code>var num = +"10"
// output : num = 10;
</code></pre>

<p><code>
</code>javascript
   var num =  +"10.23"
  // output: num = 10.23
```</p>

<p>Although choosing one style of conversion might be a personal opinion, I think that converting using the unary plus operator would act as a great shorthand, especially while writing unit test for you javascript code.</p>
]]></content>
  </entry>
  
</feed>
